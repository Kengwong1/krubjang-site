// == YouTube Data API v3 ‚Äì Enhanced Category Fetcher ==
// FIX: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏Ç‡∏≠‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠/‡πÄ‡∏û‡∏•‡∏¢‡πå‡∏•‡∏¥‡∏™‡∏ï‡πå ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
// FIX: ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå", "‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á", "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", "‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á" ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô

// **‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å:**
// ‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà API Key ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ù‡∏±‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô (Client-side) ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà Key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Ç‡πÇ‡∏°‡∏¢
// ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏à‡∏ô‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤ (Quota) ‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ
// ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (Backend) ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á
const API_KEY = "AIzaSyDe9ca5SRnYppUCacq8gh2W1ygrkJUl_Lw"; // <-- ‡πÉ‡∏™‡πà API Key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
const DEFAULT_MAX_RESULTS = 8;
const MAX_RESULTS_PER_QUERY = 6;
const CACHE_EXPIRY_SECONDS = 3600; // 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
const REGION_CODE = "TH";
const RELEVANCE_LANG = "th";

// **‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà**
const categories = [
  { title: "üé¨ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥", query: "‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏°‡∏≤‡πÅ‡∏£‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ", params: { order: "viewCount" } },
  { title: "üé• ‡∏´‡∏ô‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà", query: "‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏û‡∏≤‡∏Å‡∏¢‡πå‡πÑ‡∏ó‡∏¢ 2025", params: { order: "relevance", videoDuration: "long" } },
  { title: "ü¶∏ ‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏≠‡πá‡∏Ñ‡∏ä‡∏±‡πà‡∏ô", query: "‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏≠‡∏Ñ‡∏ä‡∏±‡πà‡∏ô‡∏°‡∏±‡∏ô‡πÜ", params: { order: "viewCount" } },
  { title: "üëª ‡∏´‡∏ô‡∏±‡∏á‡∏ú‡∏µ", query: "‡∏´‡∏ô‡∏±‡∏á‡∏ú‡∏µ‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á", params: { order: "viewCount" } },

  // üì∫ ‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå ‚Äî ‡∏õ‡∏£‡∏±‡∏ö order ‡πÄ‡∏õ‡πá‡∏ô relevance ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏à‡∏≠‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
  {
    title: "üì∫ ‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå",
    query: "‡∏ã‡∏µ‡∏£‡∏µ‡πà‡∏¢‡πå‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ ‡∏û‡∏≤‡∏Å‡∏¢‡πå‡πÑ‡∏ó‡∏¢",
    alternatives: ["‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥", "‡∏ã‡∏µ‡∏£‡∏µ‡πà‡∏¢‡πå‡∏à‡∏µ‡∏ô ‡∏ã‡∏±‡∏ö‡πÑ‡∏ó‡∏¢", "tv series interesting", "kdrama ‡∏ã‡∏±‡∏ö‡πÑ‡∏ó‡∏¢", "thai series", "drama series"],
    params: {
      order: "relevance", // <--- ***FIX: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô relevance ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô***
      videoType: "episode",
      videoDuration: "any",
      safeSearch: "none"
    }
  },

  // üíñ ‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á ‚Äî ‡πÄ‡∏ô‡πâ‡∏ô type=playlist ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡πÄ‡∏û‡∏•‡∏¢‡πå‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏ï‡∏≠‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
  {
    title: "üíñ ‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á",
    query: "‡∏•‡∏∞‡∏Ñ‡∏£ ‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á Official",
    alternatives: ["‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á 3", "‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á one31", "‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á 7", "‡∏•‡∏∞‡∏Ñ‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á ‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏≠‡∏ô"],
    type: "playlist",
    params: {
      order: "relevance",
      safeSearch: "none"
    },
    fallback: {
      type: "video",
      params: { order: "date", videoDuration: "long", safeSearch: "none" }
    }
  },

  { title: "ü•ó ‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£", query: "‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏á‡πà‡∏≤‡∏¢‡πÜ", params: { order: "relevance" } },

  // üì± ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‚Äî ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (date)
  {
    title: "üì± ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ",
    query: "‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", // <--- ***FIX: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô***
    alternatives: ["‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠", "‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå", "‡πÅ‡∏Å‡∏∞‡∏Å‡∏•‡πà‡∏≠‡∏á ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠", "‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß 2025"],
    params: {
      order: "date",
      videoDuration: "medium",
      safeSearch: "none"
    }
  },

  { title: "üí™ ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢", query: "‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô", params: { order: "relevance" } },
  { title: "‚úàÔ∏è ‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", query: "‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÑ‡∏ó‡∏¢ ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß", params: { order: "relevance" } },

  // üó£Ô∏è ‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‚Äî ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 14 ‡∏ß‡∏±‡∏ô (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°, ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)
  {
    title: "üó£Ô∏è ‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á",
    query: "‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
    alternatives: ["‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á", "‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", "‡πÅ‡∏ñ‡∏•‡∏á‡∏Ç‡πà‡∏≤‡∏ß‡∏ô‡∏≤‡∏¢‡∏Å", "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á", "‡∏î‡∏µ‡πÄ‡∏ö‡∏ï ‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á"],
    params: {
      order: "date",
      safeSearch: "none",
      publishedAfterDays: 14 // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô RFC3339 ‡πÉ‡∏ô runtime
    }
  },

  { title: "üéÆ ‡πÄ‡∏Å‡∏°‡∏™‡πå", query: "‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏•‡πà‡∏ô", params: { order: "date" } }
];


const mainContent = document.getElementById('main-content');

// ===== Utility =====
function toRFC3339DaysAgo(days = 7) {
  const d = new Date(Date.now() - days * 24 * 60 * 60 * 1000);
  return d.toISOString();
}

function buildSearchUrl(q, opts = {}) {
  const params = new URLSearchParams({
    part: 'snippet',
    q,
    key: API_KEY,
    maxResults: String(opts.maxResults || MAX_RESULTS_PER_QUERY),
    type: opts.type || 'video'
  });

  if (opts.order) params.set('order', opts.order);
  if (opts.videoType) params.set('videoType', opts.videoType);
  if (opts.videoDuration) params.set('videoDuration', opts.videoDuration);
  if (opts.eventType) params.set('eventType', opts.eventType);
  if (opts.safeSearch) params.set('safeSearch', opts.safeSearch);

  params.set('regionCode', opts.regionCode || REGION_CODE);
  params.set('relevanceLanguage', opts.relevanceLanguage || RELEVANCE_LANG);

  if (opts.publishedAfter) params.set('publishedAfter', opts.publishedAfter);
  if (opts.publishedBefore) params.set('publishedBefore', params.set('publishedBefore'));

  return `https://www.googleapis.com/youtube/v3/search?${params.toString()}`;
}

function cacheGet(cacheKey) {
  try {
    const raw = localStorage.getItem(cacheKey);
    if (!raw) return null;
    const cached = JSON.parse(raw);
    if (Date.now() - cached.timestamp > CACHE_EXPIRY_SECONDS * 1000) return null;
    return cached.data;
  } catch (e) {
    return null;
  }
}

function cacheSet(cacheKey, data) {
  try {
    localStorage.setItem(cacheKey, JSON.stringify({ data, timestamp: Date.now() }));
  } catch (e) { console.error("Failed to set cache:", e); }
}

function uniqueResults(items) {
  const seen = new Set();
  return items.filter(it => {
    const kind = it?.id?.kind || '';
    const key = kind === 'youtube#playlist' ? it?.id?.playlistId : it?.id?.videoId;
    if (!key) return false;
    const composite = `${kind}:${key}`;
    if (seen.has(composite)) return false;
    seen.add(composite);
    return true;
  });
}

async function fetchJson(url) {
  const res = await fetch(url);
  if (!res.ok) throw new Error(`HTTP ${res.status} ${res.statusText} for URL: ${url}`);
  return await res.json();
}

async function fetchCategoryItems(category) {
  const typePrimary = category.type || 'video';
  const queries = [category.query, ...(category.alternatives || [])].filter(Boolean);
  let combined = [];
  const baseOpts = { ...category.params };

  if (baseOpts && baseOpts.publishedAfterDays) {
    baseOpts.publishedAfter = toRFC3339DaysAgo(baseOpts.publishedAfterDays);
    delete baseOpts.publishedAfterDays;
  }

  // --- Primary fetch ---
  for (const q of queries) {
    const url = buildSearchUrl(q, { ...baseOpts, type: typePrimary });
    const cacheKey = `yt_cache_${encodeURIComponent(url)}`;
    let data = cacheGet(cacheKey);
    if (!data) {
      data = await fetchJson(url);
      cacheSet(cacheKey, data);
    }
    if (Array.isArray(data.items)) combined.push(...data.items);
    if (uniqueResults(combined).length >= DEFAULT_MAX_RESULTS) break;
  }

  combined = uniqueResults(combined);

  // --- Fallback fetch ---
  if (combined.length < DEFAULT_MAX_RESULTS && category.fallback) {
    const fbOpts = { ...(category.fallback.params || {}) };
    if (fbOpts.publishedAfterDays) {
      fbOpts.publishedAfter = toRFC3339DaysAgo(fbOpts.publishedAfterDays);
      delete fbOpts.publishedAfterDays;
    }
    for (const q of queries) {
      const url = buildSearchUrl(q, { ...fbOpts, type: category.fallback.type || 'video' });
      const cacheKey = `yt_cache_${encodeURIComponent(url)}`;
      let data = cacheGet(cacheKey);
      if (!data) {
        data = await fetchJson(url);
        cacheSet(cacheKey, data);
      }
      if (Array.isArray(data.items)) combined.push(...data.items);
      if (uniqueResults(combined).length >= DEFAULT_MAX_RESULTS) break;
    }
    combined = uniqueResults(combined);
  }

  return combined.slice(0, DEFAULT_MAX_RESULTS);
}

// ***FIXED: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á***
function renderVideos(category, items) {
  const videoGridId = `videos-for-${category.title.replace(/[^a-z0-9]/gi, '-')}`;
  const videoGrid = document.getElementById(videoGridId);
  if (!videoGrid) return;

  if (!items || items.length === 0) {
    videoGrid.innerHTML = '<p style="padding: 0 20px;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</p>';
    return;
  }

  videoGrid.innerHTML = ''; // Clear previous content

  for (const item of items) {
    const kind = item?.id?.kind;
    const snippet = item?.snippet || {};
    const title = snippet?.title || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á';
    const thumb = snippet?.thumbnails?.high?.url || snippet?.thumbnails?.medium?.url || '';

    let href = '#';
    if (kind === 'youtube#playlist') {
      const listId = item?.id?.playlistId;
      // ***FIXED: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö URL ‡∏Ç‡∏≠‡∏á Playlist ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ template literals***
      href = `http://googleusercontent.com/youtube.com/${listId}`;
    } else if (kind === 'youtube#video') {
      const vid = item?.id?.videoId;
      // ***FIXED: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö URL ‡∏Ç‡∏≠‡∏á Video ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ template literals***
      href = `http://googleusercontent.com/youtube.com/${vid}`;
    }

    const card = `
      <a href="${href}" target="_blank" rel="noopener" class="video-card">
        <img src="${thumb}" alt="${title}" loading="lazy">
        <h3>${title}</h3>
      </a>
    `;
    videoGrid.insertAdjacentHTML('beforeend', card);
  }
}


function createCategorySection(category) {
  const section = document.createElement('div');
  section.className = 'category-section';

  const heading = document.createElement('h2');
  heading.textContent = category.title;
  section.appendChild(heading);

  const videoGrid = document.createElement('div');
  videoGrid.className = 'video-grid';
  videoGrid.id = `videos-for-${category.title.replace(/[^a-z0-9]/gi, '-')}`;
  videoGrid.innerHTML = '<p style="padding: 0 20px;">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>';
  section.appendChild(videoGrid);

  mainContent.appendChild(section);
}

async function hydrateCategory(category) {
  const sectionId = `videos-for-${category.title.replace(/[^a-z0-9]/gi, '-')}`;
  try {
    const items = await fetchCategoryItems(category);
    renderVideos(category, items);
  } catch (error) {
    console.error(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "${category.title}":`, error);
    const videoGrid = document.getElementById(sectionId);
    if (videoGrid) {
      videoGrid.innerHTML = '<p style="color:red; padding: 0 20px;">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ (‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Console)</p>';
    }
  }
}

// Boot
document.addEventListener('DOMContentLoaded', () => {
  if (!API_KEY || API_KEY.includes("YOUR_API_KEY")) {
      mainContent.innerHTML = '<h2 style="color:red; text-align:center;">‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà API Key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>';
      return;
  }
  mainContent.innerHTML = '';
  categories.forEach(category => {
    createCategorySection(category);
    hydrateCategory(category);
  });
});